1. Скрипта во UNIX 
Излистај ги сите именици и датотеки под именикот in. За секој именик/ датотека испишете го
името и испишете дали е именик или датотека.
За датотекките испишете ја нивната големина во килобајти. Листањето треба да го помине целото
дрво од именици и датотеки во in.Доколку излистаната датотека е над 160 килобајти , потребно е
последните 3 бајти да ги додадете во tail.txt во out именикот. Доколку излистаната дадотека е со
екстенција .dat потребно е да се префрли во out именикот. Доколку in не постои треба да се
испише не постои. Доколку out не постои треба да се креира, а доколку постои треба да се
испразни.

3) Да се напише командна процедура која прима четири аргументи username , data , time1 ,time2.
Скриптата треба да провери колку пати и од кои ип адреси дадениот корисник се најавил на
системот на точната дата во интервалот меѓу time1 i time2.
Да се испечатат ip адресие од кои корисникот се најавувал во нова датотека addressi.txt.
Скриптата треба да проверува дали корисникот ја повикал со точни аргументи , доколку е утнат
бројот на аргументи , треба да се испише упатство за користење на екранот и да заврши скриптата
неуспешно.
Пример за користење на скриптата ./zad3a.sh 123456 “Sep 5” 12 16
б) Напишете комадна процедура која прима еден аргумент , вредност во денари. Скриптата треба
да пресмета колку монети од 50,10,5,2,1 се потребни за да се добие вредноста. Притоа треба да се
искористи минималниот број на монети. Исто така треба да се испише упатство за користење
доколку корисникот внесе погрешни аргументи.

2. СИНХРОНИЗАЦИЈА
﻿Ова е преработка на задачата со племенска вечера. :)

Само 1 смее да проверува дали е казанот празен со state.isPotEmpty() и доколку е празен, треба да го извести готвачот да зготви вечера со state.cook(). Откако ќе биде полн казанот,
дури тогаш смее тој што проверил да ја наполни чинијата со state.fillPlate();Потоа, на масата на која има 4 места за седење, треба да седне и да јаде со state.eat().
При тоа, готвачот не смее да готви доколку е полн казанот и не смее никој да земе да ја наполни чинијата доколку е празен казанот.Казанот е иницијално полн.

забелешка:
симнете го проект
https://github.com/ristes/synchronization-examples
и импортирајте го во вашиот Eclipse. Доколку овој проект ви јавува грешка,избришете го пакетот кој јавува грешка (со црвено е означен). во пакетот package mk.ukim.finki.os.synchronization.problems
додајте ги класите TribeDinner2 и TribeDinner2State. Вашето решение треба да го напишете во TribeDinner2, а TribeDinner2State е неопходна за да проверите дали ви е точна задачата.
