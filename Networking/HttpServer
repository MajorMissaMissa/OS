import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.net.ServerSocket;
import java.net.Socket;
import java.util.HashMap;
import java.util.Map;

public class HttpServer extends Thread {

    int port;

    public HttpServer(int port) {
        this.port = port;
    }

    @Override
    public void run() {
        try {
            ServerSocket serverSocket = new ServerSocket(this.port);
            System.out.println("Server started on port " + this.port);

            while (true) {
                Socket client = serverSocket.accept();
                System.out.println("New client connected...");
                WorkingThread worker = new WorkingThread(client);
                worker.start();
            }

        } catch (IOException e) {
            e.printStackTrace();
        }
    }

    public static void main(String[] args) {
        HttpServer server = new HttpServer(8080);
        server.start();
    }
}


class WorkingThread extends Thread {

    Socket clientSocket;

    public WorkingThread(Socket clientSocket) {
        this.clientSocket = clientSocket;
    }

    @Override
    public void run() {
        try {
            BufferedReader reader = new BufferedReader(new InputStreamReader(this.clientSocket.getInputStream()));
            PrintWriter out = new PrintWriter(this.clientSocket.getOutputStream(), true);
            String request = reader.readLine();
            Map<String, String> params = parseUrl(request);
            String name = params.getOrDefault("name", "default");
            String surname = params.getOrDefault("surname", "default");

            out.println("HTTP/1.1 200 OK");
            out.println("Content-Type: text/html");
            out.println();
            out.println("<html><head><title>Hello</title></head><body>");
            out.println("<h1>Hello, " + name + " " + surname + "!</h1>");
            out.println("</body></html>");

            this.clientSocket.close();
        } catch (IOException e) {
            e.printStackTrace();
        }
    }


    private Map<String, String> parseUrl(String url) {
        Map<String, String> map = new HashMap<String, String>();
        if (!url.contains("?")) return map;

        String[] parts = url.split("\\s+");
        String query = parts[1].split("\\?")[1];
        String[] params = query.split("&");

        for (String param : params) {
            String[] keyValue = param.split("=");
            map.put(keyValue[0], keyValue[1]);
        }

        return map;
    }
}
